pipeline {
  agent any
  stages {
    stage('Get code'){
      steps {
        checkout scm
      }
    }
    stage('Docker build and push image to DockerHub'){
      steps {
        script {
          docker.withRegistry('https://registry.hub.docker.com', 'DockerHub') {
            def customImage = docker.build("mstr0m/jenkins_web_app:${env.BUILD_ID}", "./Project2-JenkinsPipeline")
            // customImage.push()
          }
        }
      }
    }
  //   stage('Docker build image'){
  //     steps {
  //       sh 'docker build -t jenkins_pipeline_app:$BUILD_NUMBER .'
  //     }
  //   }
  //   stage('Remove Docker container') {
  //       steps {
  //           script{
  //             try {
  //                 sh 'docker rm -f Addressbook'
  //             } catch (Exception e) {
  //                 echo 'Expected exception: ' + e.toString()
  //             }
  //           }
  //       }
  //   }
  //   stage('Run in Docker') {
  //       steps {
  //           script{
  //               sh 'docker run -d --name Addressbook -p 8888:8080 -v /var/lib/jenkins/workspace/pipeline/target:/usr/local/tomcat/webapps tomcat:9.0'
  //           }
  //       }
  //   }
  }
// GOOD IDEA TO REMOVE OLD AND RUN NEW CONTAINER
// # get last success build number and remove old container
// SUCCESS_BUILD = 'wget -qO- http://jenkins_url:8080/job/jobname/lastSuccessfulBuild/buildNumber'
// docker rm -f "${SUCCESS_BUILD}" && echo "container ${SUCCESS_BUILD} removed" || echo "container ${SUCCESS_BUILD} does not exist"
  
// # run new container
// docker run -d -p 80:8080 --name "${BUILD_ID}" mstr0m/jenkins_web_app:latest
}
